
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

import tkinter as tk
import os.path
import rosto_em_imagem
import texto_em_docs
import texto_em_xlsx
import fitz
import openpyxl
from docx import Document
from tkinter import *
from tkinter import PhotoImage as pht
from tkinter import messagebox


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"Arquivos\teste\assetsGUI\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)



class MinhaGUI:
    def __init__(self):
        # Window setup from code 2
        self.window = Tk()
        self.window.geometry("1200x800")
        self.window.configure(bg="#000000")

        # Canvas creation from code 2
        self.canvas = Canvas(
            self.window,
            bg="#000000",
            height=800,
            width=1200,
            bd=0,
            highlightthickness=0,
            relief="ridge",
        )
        
        self.canvas.place(x = 0, y = 0)
        image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = self.canvas.create_image(
            600.0,
            181.0,
            image=image_image_1
        )

        # Label and buttons from code 1 (modify positions if needed)
        self.canvas.place(x = 0, y = 0)
        image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = self.canvas.create_image(
            600.0,
            181.0,
            image=image_image_1
        )

        self.canvas.create_text(
            357.0,
            386.0,
            anchor="nw",
            text="Indique o caminho que deve ser utilizado:",
            fill="#FFFFFF",
            font=("JostRoman Bold", 24 * -1)
        )

      

        self.entrada = Entry(self.canvas, width=40, bg="#D9D9D9", fg="#000716", font=50)
        self.entrada.place(x=357.0, y=446.0, width=470.0, height=35.0)  # Adjust position as needed

        # Button elements with images from code 2
        button_image_1 = PhotoImage(file=r"Arquivos\teste\assetsGUI\frame0\button_1.png") if relative_to_assets else PhotoImage(file=r"Arquivos\teste\assetsGUI\frame0\button_1.png")
        button_image_2 = PhotoImage(file=r"Arquivos\teste\assetsGUI\frame0\button_2.png") if relative_to_assets else PhotoImage(file=r"Arquivos\teste\assetsGUI\frame0\button_2.png")

        self.botao = Button(
            self.canvas,
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=self.exibe,
            relief="flat",
        )
        self.botao.place(x=379.0, y=527.0, width=213.0, height=35.0)  # Adjust position as needed

        self.botao_sair = Button(
            self.canvas,
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=self.window.quit,
            relief="flat",
        )
        self.botao_sair.place(x=600.0, y=527.0, width=213.0, height=35.0)  # Adjust position as needed

        # Prevent window resizing from code 2
        self.window.resizable(False, False)

        # Main loop from code 1
        mainloop()

    def exibe(self):
        for path, directories, files in os.walk(self.entrada.get()): #Caminho de arquivos a ser analisado
          for file in files:
               if file.endswith(".PNG") or file.endswith(".jpg") or file.endswith(".jpeg") or file.endswith(".png"): #Definindo os tipos de arquivos de imagens
                    caminho = os.path.join(path, file)  # Apontando o caminho do arquivo para uma variável
                    #Chamar módulo
                    rosto_em_imagem.imagem(caminho, file, path)
               elif file.endswith(".pdf"): #Definindo os tipos de arquivos de texto
                    caminho = os.path.join(path, file)
                    doc = fitz.open(caminho)
                    text = ""
                    for page in doc:
                         text+=page.get_text()
                         texto_em_docs.texto(caminho, file, path, text)
               elif file.endswith(".docx") or file.endswith(".doc"):
                    caminho = os.path.join(path, file)
                    doc = Document(caminho)
                    text = '\n'.join([p.text for p in doc.paragraphs])
                    texto_em_docs.texto(caminho, file, path, text)

               elif file.endswith(".xlsx"):
                    caminho = os.path.join(path, file)
                    workbook = openpyxl.load_workbook(caminho)
                    texto = ""
                    for sheet in workbook:
                        for row in sheet.iter_rows():
                            for cell in row:
                                texto += str(cell.value) + "\n"
                    texto_em_xlsx.texto(caminho, file, path, texto)

        messagebox.showinfo("GetSens3", "Análise feita com sucesso!")

gui = MinhaGUI()